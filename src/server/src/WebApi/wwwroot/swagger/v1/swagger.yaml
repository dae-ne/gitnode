openapi: 3.0.1
info:
  title: GitNode
  version: v1
paths:
  '/api/account/{id}':
    get:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponseDto'
  /api/account:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccountRequestDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponseDto'
  /api/accounts:
    get:
      tags:
        - Accounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponseDto'
  /api/auth/token:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTokenRequestDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponseDto'
  /api/auth/revoke:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeTokenRequestDto'
      responses:
        '200':
          description: Success
  '/api/repo/{id}':
    get:
      tags:
        - Repo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoResponseDto'
    put:
      tags:
        - Repo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRepoRequestDto'
      responses:
        '200':
          description: Success
  /api/repo:
    post:
      tags:
        - Repo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRepoRequestDto'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoResponseDto'
  /api/repos:
    get:
      tags:
        - Repos
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepoResponseDto'
    post:
      tags:
        - Repos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddExternalReposRequestDto'
      responses:
        '200':
          description: Success
  '/api/repos/{platform}/{account}':
    get:
      tags:
        - Repos
      parameters:
        - name: platform
          in: path
          required: true
          schema:
            type: string
        - name: account
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalRepoResponseDto'
  /api/user:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
    delete:
      tags:
        - User
      responses:
        '200':
          description: Success
  '/api/user/{id}':
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
  /api/users:
    get:
      tags:
        - Users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDto'
components:
  schemas:
    AccountResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        origin_id:
          type: string
          nullable: true
        user_id:
          type: string
          nullable: true
        platform:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        login:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        avatar_url:
          type: string
          nullable: true
      additionalProperties: false
    AddAccountRequestDto:
      type: object
      properties:
        code:
          type: string
          nullable: true
        platform:
          type: string
          nullable: true
      additionalProperties: false
    AddExternalReposRequestDto:
      type: object
      properties:
        account:
          type: string
          nullable: true
        platform:
          type: string
          nullable: true
        origin_ids:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    AddRepoRequestDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        private:
          type: boolean
        account:
          type: string
          nullable: true
        platform:
          type: string
          nullable: true
      additionalProperties: false
    ExternalRepoResponseDto:
      type: object
      properties:
        origin_id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        private:
          type: boolean
        account:
          type: string
          nullable: true
      additionalProperties: false
    GetTokenRequestDto:
      type: object
      properties:
        code:
          type: string
          nullable: true
        refresh_token:
          type: string
          nullable: true
        grant_type:
          type: string
          nullable: true
      additionalProperties: false
    RepoOwnerResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        avatar_url:
          type: string
          nullable: true
      additionalProperties: false
    RepoResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        origin_id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        private:
          type: boolean
        owner:
          $ref: '#/components/schemas/RepoOwnerResponseDto'
      additionalProperties: false
    RevokeTokenRequestDto:
      type: object
      properties:
        token:
          type: string
          nullable: true
      additionalProperties: false
    TokenResponseDto:
      type: object
      properties:
        id_token:
          type: string
          nullable: true
        refresh_token:
          type: string
          nullable: true
        expires_in:
          type: integer
          format: int32
        scope:
          type: string
          nullable: true
        token_type:
          type: string
          nullable: true
      additionalProperties: false
    UpdateRepoRequestDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        private:
          type: boolean
      additionalProperties: false
    UserResponseDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        given_name:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        image_url:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: Please insert JWT with Bearer into field
      name: Authorization
      in: header
security:
  - Bearer: [ ]